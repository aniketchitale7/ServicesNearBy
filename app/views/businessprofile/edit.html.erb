<body>
<script>
  // This example displays an address form, using the autocomplete feature
  // of the Google Places API to help users fill in the information.

  // This example requires the Places library. Include the libraries=places
  // parameter when you first load the API. For example:
  // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">
  geolocate()
  var placeSearch, autocomplete;
  var componentForm = {
    street_number: 'short_name',
    route: 'long_name',
    locality: 'long_name',
    administrative_area_level_1: 'short_name',
    country: 'long_name',
    postal_code: 'short_name'
  };
  function getLatLong()
  {
    var add = document.getElementById('autocomplete').value;
    var geo = new google.maps.Geocoder;
    geo.geocode({'address':add},function(results, status){
      if (status == google.maps.GeocoderStatus.OK) {
        var myLatLng = results[0].geometry.location;
        var myLat = results[0].geometry.location.lat();
        var myLng = results[0].geometry.location.lng();
        document.getElementById('latitude').value = myLat;
        document.getElementById('longitude').value = myLng;

      } else {
        alert("Geocode was not successful for the following reason: " + status);
      }
    });


  }
  function initAutocomplete() {
    // Create the autocomplete object, restricting the search to geographical
    // location types.
    autocomplete = new google.maps.places.Autocomplete(
        /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
        {types: ['geocode']});

    // When the user selects an address from the dropdown, populate the address
    // fields in the form.
    autocomplete.addListener('place_changed', fillInAddress);
  }

  function fillInAddress() {
    // Get the place details from the autocomplete object.
    var place = autocomplete.getPlace();

    for (var component in componentForm) {
      document.getElementById(component).value = '';
      document.getElementById(component).disabled = false;
    }
    // Get each component of the address from the place details
    // and fill the corresponding field on the form.
    for (var i = 0; i < place.address_components.length; i++) {
      var addressType = place.address_components[i].types[0];
      if (componentForm[addressType]) {
        var val = place.address_components[i][componentForm[addressType]];
        document.getElementById(addressType).value = val;
      }

    }
  }
  // Bias the autocomplete object to the user's geographical location,
  // as supplied by the browser's 'navigator.geolocation' object.
  function geolocate() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var geolocation = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        var circle = new google.maps.Circle({
          center: geolocation,
          radius: position.coords.accuracy
        });
        autocomplete.setBounds(circle.getBounds());
        //alert(position.coords.latitude + " : " +position.coords.longitude);
      });
    }
  }
  function distance(lat1, lon1, lat2, lon2) {
    var radlat1 = Math.PI * lat1/180
    var radlat2 = Math.PI * lat2/180
    var theta = lon1-lon2
    var radtheta = Math.PI * theta/180
    var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);
    dist = Math.acos(dist)
    dist = dist * 180/Math.PI
    dist = dist * 60 * 1.1515
    return dist
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDqtmR7Bep2EGbBVo9PWNVe8nlpntSF-dc&libraries=places&callback=initAutocomplete"
        async defer></script>

<div id = "wrapper">
  <div id="main">
    <div class="inner">
      <br/>
      <br/>
      <br/>
      <%= form_tag businessprofile_path(@item), :method => :put do %>   <h2>Edit Business Page</h2>
        <section>
          <div class="row uniform">
            <% @address = @item.service_address %>
            <div class="field">
              Shop Name: <input type="text" name="service_name" value= "<%=@item["service_name"]%>" class="form-control input-lg" placeholder="First Name"  />
            </div>
            <div class="field">
              Phone Number: <input type="text" name="phoneNo"  value= "<%=@item["phoneNo"]%>" class="form-control input-lg" placeholder="Contact Number"  />
            </div>
            <div class="field">
              Time: <input type="text" name="service_time" value= "<%=@item["service_time"]%>" class="form-control input-lg" placeholder="Address Line 1"  />
            </div>
            <div class="field">
              Price:<input type="text" name="service_price" value= "<%=@item["service_price"]%>" class="form-control input-lg" placeholder="Address Line 2"  />
            </div>
            <div class="field">
              Description: <input type="text" name="service_description" value= "<%=@item["service_description"]%>" class="form-control input-lg" placeholder="Zip"  />
            </div>
            <div id="locationField">
              Address: <input id="autocomplete" placeholder="Enter your address"
                              onFocus="geolocate()" type="text" name="address" value = "<%=@address["address"]%>" required >
            </div>
            <div id="locationField">
              Landmark: <input type="text" name="landmark"  value = "<%=@address["landmark"]%>" class="form-control input-lg" placeholder="eg: Near Maclean or Apt B etc"  />
            </div>
            <div id="locationField">
              <input type="hidden" name="latitude" id="latitude" class="form-control input-lg" placeholder="" />
            </div>
            <div id="locationField">
              <input type="hidden" name="longitude" id="longitude" class="form-control input-lg" placeholder="" />
            </div>

            <br />
            <div class="actions">
              <button type="submit">UDPATE</button>
            </div>
          </div>
        </section>
          <%end%>
      </form>
    </div>
  </div>
</div>
</body>