<!-- Main -->
<div id="main">
  <div class="inner">
    <div class="container">
      <div class="row">
        <div class="search">

        </div>
      </div>
    </div>


    <br/>
    <header>
      <ul class="topnav" id="myTopnav">
        <li><a class="active">Filters: </a></li>
        <li><a href="#news">Price</a></li>
        <li><a href="#contact">A-Z</a></li>
        <li><a href="#about">Rating</a></li>
        <li class="location"><a>Location</a></li>
        <li class="distance"><a>Distance</a></li>
        <li class="categories"><a>Categories</a></li>
        <li class="icon">
          <a href="javascript:void(0);" style="font-size:15px;" onclick="myFunction()">☰</a>
        </li>
      </ul>
    </header>
    <section>
      <br/>
      <br/>
      <div class="row uniform" id="categoriesShow" hidden>
        <div class="6u 12u$(xsmall)">
          <%= text_field_tag 'category_box',nil, placeholder: "Enter Category" %>
        </div>
        <div class="6u$ 12u$(xsmall)">
          <%= submit_tag 'Filter'%>
        </div>
      </div>
      <div class="row uniform" id="locationShow" hidden>
        <div class="6u 12u$(xsmall)">
          <%= text_field_tag 'category_box',nil, placeholder: "Enter City" %>
        </div>
        <div class="6u$ 12u$(xsmall)">
          <%= submit_tag 'Filter'%>
        </div>
      </div>
      <div class="row uniform" id="distanceShow" hidden>
        <div class="6u 12u$(xsmall)">
          <%= text_field_tag 'category_box',nil, placeholder: "Filter Distance" %>
        </div>
        <div class="6u$ 12u$(xsmall)">
          <%= submit_tag 'Filter'%>
        </div>
      </div>
    </section>
    <br/>
    <br/>



  </div>
  <br/>
  <br/>
  <div class="center">
    <ul class="pagination">
      <li><a href="#">«</a></li>
      <li><a href="#">1</a></li>
      <li><a class="active" href="#">2</a></li>
      <li><a href="#">3</a></li>
      <li><a href="#">4</a></li>
      <li><a href="#">5</a></li>
      <li><a href="#">6</a></li>
      <li><a href="#">7</a></li>
      <li><a href="#">»</a></li>
    </ul>
  </div>

  <body>
  <div id="locationField">
    <input id="autocomplete" placeholder="Enter your address"
           onFocus="geolocate()" type="text"></input>
  </div>

  <table id="address">
    <tr>
      <td class="label">Street address</td>
      <td class="slimField"><input class="field" id="street_number"
                                   disabled="true"></input></td>
      <td class="wideField" colspan="2"><input class="field" id="route"
                                               disabled="true"></input></td>
    </tr>
    <tr>
      <td class="label">City</td>
      <!-- Note: Selection of address components in this example is typical.
           You may need to adjust it for the locations relevant to your app. See
           https://developers.google.com/maps/documentation/javascript/examples/places-autocomplete-addressform
      -->
      <td class="wideField" colspan="3"><input class="field" id="locality"
                                               disabled="true"></input></td>
    </tr>
    <tr>
      <td class="label">State</td>
      <td class="slimField"><input class="field"
                                   id="administrative_area_level_1" disabled="true"></input></td>
      <td class="label">Zip code</td>
      <td class="wideField"><input class="field" id="postal_code"
                                   disabled="true"></input></td>
    </tr>
    <tr>
      <td class="label">Country</td>
      <td class="wideField" colspan="3"><input class="field"
                                               id="country" onclick=" return getLatLong()" disabled="true"></input></td>
    </tr>
  </table>
  <script>
    // This example displays an address form, using the autocomplete feature
    // of the Google Places API to help users fill in the information.

    // This example requires the Places library. Include the libraries=places
    // parameter when you first load the API. For example:
    // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">
    geolocate()
    var placeSearch, autocomplete;
    var componentForm = {
      street_number: 'short_name',
      route: 'long_name',
      locality: 'long_name',
      administrative_area_level_1: 'short_name',
      country: 'long_name',
      postal_code: 'short_name'
    };
    function getLatLong()
    {
      var add = document.getElementById('autocomplete').value;
      alert(add);
      var geo = new google.maps.Geocoder;
      geo.geocode({'address':add},function(results, status){
        if (status == google.maps.GeocoderStatus.OK) {
          var myLat = results[0].geometry.location;
          var myLng = results[0].geometry.longitude;
          alert(myLat +" : "+ myLng);
          // Add some code to work with myLatLng

        } else {
          alert("Geocode was not successful for the following reason: " + status);
        }
      });


    }
    function initAutocomplete() {
      // Create the autocomplete object, restricting the search to geographical
      // location types.
      autocomplete = new google.maps.places.Autocomplete(
          /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
          {types: ['geocode']});

      // When the user selects an address from the dropdown, populate the address
      // fields in the form.
      autocomplete.addListener('place_changed', fillInAddress);
    }

    function fillInAddress() {
      // Get the place details from the autocomplete object.
      var place = autocomplete.getPlace();

      for (var component in componentForm) {
        document.getElementById(component).value = '';
        document.getElementById(component).disabled = false;
      }
      // Get each component of the address from the place details
      // and fill the corresponding field on the form.
      for (var i = 0; i < place.address_components.length; i++) {
        var addressType = place.address_components[i].types[0];
        if (componentForm[addressType]) {
          var val = place.address_components[i][componentForm[addressType]];
          document.getElementById(addressType).value = val;
        }

      }
    }
    // Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
    function geolocate() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
          var geolocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };
          var circle = new google.maps.Circle({
            center: geolocation,
            radius: position.coords.accuracy
          });
          autocomplete.setBounds(circle.getBounds());
          //alert(position.coords.latitude + " : " +position.coords.longitude);
        });
      }
    }
    function distance(lat1, lon1, lat2, lon2) {
      var radlat1 = Math.PI * lat1/180
      var radlat2 = Math.PI * lat2/180
      var theta = lon1-lon2
      var radtheta = Math.PI * theta/180
      var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);
      dist = Math.acos(dist)
      dist = dist * 180/Math.PI
      dist = dist * 60 * 1.1515
      return dist
    }
  </script>
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDqtmR7Bep2EGbBVo9PWNVe8nlpntSF-dc&libraries=places&callback=initAutocomplete"
          async defer></script>
  </body>
</div>

